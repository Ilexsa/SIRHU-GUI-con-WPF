<Window x:Class="SIRHU.View.EditUsersView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SIRHU.View"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:customControls="clr-namespace:SIRHU.CustomControls"
        xmlns:converter="clr-namespace:SIRHU.Validations"
        xmlns:viewModel="clr-namespace:SIRHU.ViewModel"
        mc:Ignorable="d"
        Title="EditUsersView" Height="450" Width="400"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        MouseDown="Window_MouseDown">
    <Window.DataContext>
        <viewModel:LoginViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="textBoxStylesNuevo" TargetType="TextBox">
            <Setter Property="Background" Value="#4CA1F5"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource color3}"/>
            <Setter Property="Padding" Value="8 4"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="FontFamily" Value="poppins black"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Width" Value="330"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="#131313"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="txtBorder"
                      Background="{TemplateBinding Background}"
                      CornerRadius="5"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="False"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"
                        Margin="-0 2"/>
                                <Label x:Name="WaterMarkerLabel"
                 Content="{TemplateBinding Tag}"
                 FontWeight="{TemplateBinding FontWeight}"
                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                 Visibility="Collapsed"
                 FontFamily="{TemplateBinding FontFamily}"
                 FontSize="{TemplateBinding FontSize}"
                 Foreground="{TemplateBinding Foreground}"
                 Padding="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="txtBorder" Value="#a87b05"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="txtBorder" Value="#a87b05"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                  TargetName="WaterMarkerLabel"
                  Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButtomStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#FFFFFC"/>
            <Setter Property="BorderBrush" Value="{StaticResource color8}"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="MaxHeight" Value="20"/>
            <Setter Property="MaxWidth" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>

                            <Border x:Name="Border"
          Background="{TemplateBinding Background}"
          CornerRadius="7"
          Height="14"
          Width="35"
          VerticalAlignment="Center"
          HorizontalAlignment="Center"/>
                            <Ellipse x:Name="Ellipse"
           Height="20"
           Width="20"
           HorizontalAlignment="Left"
           VerticalAlignment="Center"
           Fill="White"
           Stroke="{TemplateBinding BorderBrush}"
           StrokeThickness="3"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--EventTrigger Checked-->
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                              To="#2196F3" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                  Storyboard.TargetProperty="Margin"
                                  To="15 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <!--EventTrigger UnChecked-->
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
       Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
       To="#FFFFFC" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
           Storyboard.TargetProperty="Margin"
           To="0 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border CornerRadius="12">
        <Border.Background>
            <ImageBrush ImageSource="/Images/Recurso 2.png"
                     Stretch="None"/>
        </Border.Background>
        <Border CornerRadius="10"
     Background="Transparent"
     BorderThickness="5">
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                    <GradientStop Color="#930001" Offset="0.0"/>
                    <GradientStop Color="#930001" Offset="0.75"/>
                    <GradientStop Color="#ffbf00" Offset="0.90"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="420"/>
                </Grid.RowDefinitions>
                <Button x:Name="btnClose"
                         BorderThickness="0"
                         Content="X"
                         Foreground="White"
                         FontSize="16"
                         FontFamily="Montserrat"
                         Cursor="Hand"
                         HorizontalAlignment="Right"
                         Click="btnClose_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#414142"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#930001"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="25" Height="25"
                                     CornerRadius="10"
                                     Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <TextBlock Grid.Row="1" Text="Editar Usuario"
                        Foreground="{StaticResource color10}"
                        HorizontalAlignment="Center" VerticalAlignment="Top"
                        Margin="20"
                        FontSize="30"
                        FontFamily="poppins black">

                </TextBlock>
                <StackPanel 
              Width="350"
              Height="280"
              Grid.Column="0"
              Grid.Row="1"
              Orientation="Vertical">
                    <TextBox x:Name="txtFirstName" Tag="Nombre" Style="{DynamicResource textBoxStylesNuevo}" 
               Width="330" MaxLength="40" Margin="0 10 0 0 "
               Text="{Binding User.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>
                    <TextBox x:Name="txtLastName" Tag="Apellido" Style="{DynamicResource textBoxStylesNuevo}" 
               Width="330" MaxLength="40" Margin="0 10 0 0 "
               Text="{Binding User.LastName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>
                    <TextBox x:Name="txtUserName" Tag="Nombre de Usuario" Style="{DynamicResource textBoxStylesNuevo}" 
               Width="330" MaxLength="40" Margin="0 10 0 0 "
               Text="{Binding User.Nickname, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>

                    <!--<TextBox x:Name="txtContraseña" Tag="Contraseña" Style="{DynamicResource textBoxStylesNuevo}" 
               VerticalAlignment="Top" Width="330" MaxLength="20" Margin="0 10 0 0 "
               Text="" />-->

                    <!--<PasswordBox Style="{DynamicResource passwordBoxStyles}" 
                   VerticalAlignment="Top" Width="330" MaxLength="20" Margin="0 10 0 0 "
                   Password="{Binding User.Password, UpdateSourceTrigger=PropertyChanged}"/>-->
                    <customControls:BindablePasswordBox1 x:Name="pbPassword" Width="330"  Margin="0 10 0 0"
                      Password="{Binding User.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>

                    <!--<TextBlock x:Name="waterMark" IsHitTestVisible="False" FontSize="13" Text="Contraseña" VerticalAlignment="Top"
                 Foreground="Black" FontWeight="Medium" Margin="28 -27.6 240 0" FontFamily="poppins black"/>-->

                    <TextBox x:Name="txtEmail" Tag="Correo Institucional" Style="{DynamicResource textBoxStylesNuevo}" 
               Width="330" MaxLength="40" Margin="0 10 0 0 "
               Text="{Binding User.Email, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>

                    <TextBox x:Name="txtPosition" Tag="Rol" Style="{DynamicResource textBoxStylesNuevo}" 
              Width="330" MaxLength="40" Margin="0 10 0 0 "
              Text="{Binding User.Position, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <materialDesign:PackIcon Kind="CardAccountDetails" Margin="315 -25 0 0" Foreground="white"/>

                    <TextBox x:Name="txtID" Tag="Rol" Style="{DynamicResource textBoxStylesNuevo}" 
              Width="330" MaxLength="20" Margin="0 10 0 0 "
              Text="{Binding User.Id, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
                <Button x:Name="btnGuardar"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Bottom"
                     Grid.Row="1"
                     Margin="30"
                     Content="Guardar"
                     Command="{Binding EditUserCommand}"
                     Click="btnGuardar_Click"
                     >

                </Button>
            </Grid>
        </Border>
    </Border>
</Window>
